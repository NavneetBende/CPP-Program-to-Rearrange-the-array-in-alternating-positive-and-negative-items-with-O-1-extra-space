#include <bits/stdc++.h>
using namespace std;

void fill1(int a[], int neg, int pos)
{
   if (neg % 2 == 1)
   {
     for(int i = 1; i < neg; i += 2)
     {
       int c = a[i];
       int d = a[i + neg];
       int temp = c;
       a[i] = d;
       a[i + neg] = temp;
     }
   }
   else
   {
      for(int i = 1; i <= neg; i += 2)
      {
        int c = a[i];
        int d = a[i + neg - 1];
        int temp = c;
        a[i] = d;
        a[i + neg - 1] = temp;
      }
   }
}

void fill2(int a[], int neg, int pos)
{
   if (pos % 2 == 1)
   {
     for(int i = 1; i < pos; i += 2)
     {
        int c = a[i];
        int d = a[i + pos];
        int temp = c;
        a[i] = d;
        a[i + pos] = temp;
     }
   }
   else
   {
      for(int i = 1; i <= pos; i += 2)
      {
         int c = a[i];
         int d = a[i + pos - 1];
         int temp = c;
         a[i] = d;
         a[i + pos - 1] = temp;
      }
   }
}



// A utility function to print an array 'arr[]' of size 'n'
void printArray(int arr[], int n)
{
   for (int i = 0; i < n; i++)
     cout<<arr[i]<<" ";
   cout<<"\n";
}

// Driver code
int main()
{

  int n;
  cin>>n;

  int arr[n];
  for(int i=0; i<n; i++)
    cin>>arr[i];

  cout<<"Given array is \n";
  printArray(arr, n);

  int neg = 0, pos = 0;
  for(int i = 0; i < n; i++)
  {
     if (arr[i] < 0)
     neg++;
     else
     pos++;
  }

  sort(arr, arr+n);
  printArray(arr, n);

  if (neg <= pos)
  {
    fill1(arr, neg, pos);
  }
  else
  {
     // Reverse the array in this condition
     int i, k, t;
     for(i = 0; i < n / 2; i++)
     {
        t = arr[i];
        arr[i] = arr[n - i - 1];
        arr[n - i - 1] = t;
     }
     fill2(arr, neg, pos);
   }
   cout<<"Rearranged array is \n";
   printArray(arr, n);
 
   return 0;
}
